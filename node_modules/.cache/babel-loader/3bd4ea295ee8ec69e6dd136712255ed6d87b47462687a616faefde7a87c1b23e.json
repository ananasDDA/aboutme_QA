{"ast":null,"code":"var _jsxFileName = \"/Users/daniil/Documents/Projects/WEBusinessCard's/QA/src/context/ThemeContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ThemeContext = /*#__PURE__*/createContext();\nexport const ThemeProvider = ({\n  children\n}) => {\n  _s();\n  const [darkMode, setDarkMode] = useState(() => {\n    // Проверяем сохраненную тему из localStorage\n    const savedTheme = localStorage.getItem('theme');\n    return savedTheme === 'dark' || !savedTheme && window.matchMedia('(prefers-color-scheme: dark)').matches;\n  });\n  useEffect(() => {\n    // Обновляем класс на body при изменении темы\n    if (darkMode) {\n      document.body.classList.add('dark-theme');\n      localStorage.setItem('theme', 'dark');\n    } else {\n      document.body.classList.remove('dark-theme');\n      localStorage.setItem('theme', 'light');\n    }\n  }, [darkMode]);\n  const toggleTheme = () => {\n    setDarkMode(!darkMode);\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      darkMode,\n      toggleTheme\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(ThemeProvider, \"P+VvOMLIKVXFZJlOqkebGQ4k8Mk=\");\n_c = ThemeProvider;\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","ThemeContext","ThemeProvider","children","_s","darkMode","setDarkMode","savedTheme","localStorage","getItem","window","matchMedia","matches","document","body","classList","add","setItem","remove","toggleTheme","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/daniil/Documents/Projects/WEBusinessCard's/QA/src/context/ThemeContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\n\nexport const ThemeContext = createContext();\n\nexport const ThemeProvider = ({ children }) => {\n  const [darkMode, setDarkMode] = useState(() => {\n    // Проверяем сохраненную тему из localStorage\n    const savedTheme = localStorage.getItem('theme');\n    return savedTheme === 'dark' ||\n      (!savedTheme && window.matchMedia('(prefers-color-scheme: dark)').matches);\n  });\n\n  useEffect(() => {\n    // Обновляем класс на body при изменении темы\n    if (darkMode) {\n      document.body.classList.add('dark-theme');\n      localStorage.setItem('theme', 'dark');\n    } else {\n      document.body.classList.remove('dark-theme');\n      localStorage.setItem('theme', 'light');\n    }\n  }, [darkMode]);\n\n  const toggleTheme = () => {\n    setDarkMode(!darkMode);\n  };\n\n  return (\n    <ThemeContext.Provider value={{ darkMode, toggleTheme }}>\n      {children}\n    </ThemeContext.Provider>\n  );\n};"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,OAAO,MAAMC,YAAY,gBAAGL,aAAa,CAAC,CAAC;AAE3C,OAAO,MAAMM,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC7C,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,MAAM;IAC7C;IACA,MAAMU,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAChD,OAAOF,UAAU,KAAK,MAAM,IACzB,CAACA,UAAU,IAAIG,MAAM,CAACC,UAAU,CAAC,8BAA8B,CAAC,CAACC,OAAQ;EAC9E,CAAC,CAAC;EAEFd,SAAS,CAAC,MAAM;IACd;IACA,IAAIO,QAAQ,EAAE;MACZQ,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,GAAG,CAAC,YAAY,CAAC;MACzCR,YAAY,CAACS,OAAO,CAAC,OAAO,EAAE,MAAM,CAAC;IACvC,CAAC,MAAM;MACLJ,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACG,MAAM,CAAC,YAAY,CAAC;MAC5CV,YAAY,CAACS,OAAO,CAAC,OAAO,EAAE,OAAO,CAAC;IACxC;EACF,CAAC,EAAE,CAACZ,QAAQ,CAAC,CAAC;EAEd,MAAMc,WAAW,GAAGA,CAAA,KAAM;IACxBb,WAAW,CAAC,CAACD,QAAQ,CAAC;EACxB,CAAC;EAED,oBACEL,OAAA,CAACC,YAAY,CAACmB,QAAQ;IAACC,KAAK,EAAE;MAAEhB,QAAQ;MAAEc;IAAY,CAAE;IAAAhB,QAAA,EACrDA;EAAQ;IAAAmB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B,CAAC;AAACrB,EAAA,CA5BWF,aAAa;AAAAwB,EAAA,GAAbxB,aAAa;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}