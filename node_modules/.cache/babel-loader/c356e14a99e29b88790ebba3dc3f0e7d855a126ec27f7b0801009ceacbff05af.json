{"ast":null,"code":"var _jsxFileName = \"/Users/daniil/Documents/Projects/WEBusinessCard's/QA/src/pages/Experience/Experience.js\",\n  _s2 = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Modal from '../../components/Modal/Modal';\nimport useScrollAnimation from '../../hooks/useScrollAnimation';\nimport './Experience.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Experience = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [selectedJob, setSelectedJob] = useState(null);\n\n  // Данные о местах работы с проектами\n  const jobData = [{\n    id: 1,\n    period: \"2021 - Настоящее время\",\n    title: \"Старший QA инженер\",\n    company: \"Company XYZ\",\n    description: \"Занимаюсь тестированием и автоматизацией проверок для нескольких проектов компании. Разрабатываю тестовые сценарии, проектирую и поддерживаю фреймворк автоматизации на Python.\",\n    responsibilities: [\"Автоматизация тестирования на Python с использованием Pytest, Selenium\", \"Разработка и поддержка CI/CD пайплайнов\", \"Обеспечение качества продукта на всех этапах разработки\", \"Наставничество и обучение младших QA инженеров\"],\n    projects: [{\n      name: \"Корпоративная платформа управления данными\",\n      description: \"Разработка фреймворка автоматизации для тестирования web-интерфейса и REST API. Внедрение непрерывной интеграции с Jenkins для автоматического запуска тестов при каждом коммите.\",\n      technologies: [\"Python\", \"Pytest\", \"Selenium\", \"Jenkins\", \"Docker\", \"Allure\"]\n    }, {\n      name: \"Мобильное приложение для финансового сектора\",\n      description: \"Создание стратегии тестирования и автоматизация проверок для iOS и Android приложений. Внедрение BDD-подхода с использованием Cucumber и Appium.\",\n      technologies: [\"Appium\", \"Java\", \"Cucumber\", \"TestNG\", \"BDD\"]\n    }, {\n      name: \"Интеграция платежных систем\",\n      description: \"Разработка и автоматизация тестовых сценариев для проверки интеграции с различными платежными системами. Тестирование безопасности и производительности API.\",\n      technologies: [\"Postman\", \"JMeter\", \"Python\", \"Security Testing\"]\n    }]\n  }, {\n    id: 2,\n    period: \"2019 - 2021\",\n    title: \"QA инженер\",\n    company: \"Tech Solutions Inc.\",\n    description: \"Участвовал в разработке и тестировании веб-приложений и мобильных приложений. Проводил ручное и автоматизированное тестирование, работал с баг-трекерами.\",\n    responsibilities: [\"Функциональное, регрессионное и UI тестирование\", \"Разработка тестовых сценариев и тест-кейсов\", \"Базовая автоматизация с использованием Python и Selenium\", \"Работа с REST API и Postman\"],\n    projects: [{\n      name: \"CRM система для компаний малого бизнеса\",\n      description: \"Тестирование веб-интерфейса CRM системы, включая функциональные, интеграционные и регрессионные тесты. Автоматизация критических пользовательских сценариев.\",\n      technologies: [\"Selenium\", \"JavaScript\", \"TestRail\", \"JIRA\"]\n    }, {\n      name: \"Веб-портал для образовательной платформы\",\n      description: \"Проверка соответствия требованиям и совместимости с различными браузерами. Создание автоматизированных тестов для проверки процесса регистрации и авторизации.\",\n      technologies: [\"Selenium WebDriver\", \"Python\", \"Cross-browser Testing\"]\n    }]\n  }, {\n    id: 3,\n    period: \"2018 - 2019\",\n    title: \"Стажер-тестировщик\",\n    company: \"Digital Start\",\n    description: \"Начал свою карьеру в IT с позиции стажера-тестировщика. Изучал основы тестирования ПО, проводил базовые проверки и писал тестовую документацию.\",\n    responsibilities: [\"Ручное тестирование веб-приложений\", \"Работа с тестовой документацией\", \"Изучение основных принципов QA\", \"Участие в командных обсуждениях и ретроспективах\"],\n    projects: [{\n      name: \"Интернет-магазин электроники\",\n      description: \"Ручное тестирование функциональности и пользовательского интерфейса. Подготовка тестовой документации и отчетов о дефектах.\",\n      technologies: [\"Manual Testing\", \"Test Case Design\", \"Bug Tracking\"]\n    }]\n  }];\n  const openModal = job => {\n    setSelectedJob(job);\n    setIsModalOpen(true);\n  };\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n\n  // Создание содержимого модального окна для выбранной работы\n  const modalContent = selectedJob ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-job-content\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-job-overview\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"modal-job-description\",\n        children: selectedJob.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-responsibilities\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"\\u041E\\u0441\\u043D\\u043E\\u0432\\u043D\\u044B\\u0435 \\u043E\\u0431\\u044F\\u0437\\u0430\\u043D\\u043D\\u043E\\u0441\\u0442\\u0438:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: selectedJob.responsibilities.map((resp, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: resp\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"modal-projects-title\",\n      children: \"\\u041A\\u043B\\u044E\\u0447\\u0435\\u0432\\u044B\\u0435 \\u043F\\u0440\\u043E\\u0435\\u043A\\u0442\\u044B:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), selectedJob.projects.map((project, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-project\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: project.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"modal-project-description\",\n        children: project.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-project-tech\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-tech-title\",\n          children: \"\\u0422\\u0435\\u0445\\u043D\\u043E\\u043B\\u043E\\u0433\\u0438\\u0438:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-tech-tags\",\n          children: project.technologies.map((tech, techIndex) => /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"modal-tech-tag\",\n            children: tech\n          }, techIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this) : null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"experience-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"section-title\",\n      children: \"\\u041E\\u043F\\u044B\\u0442 \\u0440\\u0430\\u0431\\u043E\\u0442\\u044B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"section-subtitle\",\n      children: \"\\u041C\\u043E\\u0439 \\u043F\\u0440\\u043E\\u0444\\u0435\\u0441\\u0441\\u0438\\u043E\\u043D\\u0430\\u043B\\u044C\\u043D\\u044B\\u0439 \\u043F\\u0443\\u0442\\u044C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timeline\",\n      children: _s(jobData.map(_s(job => {\n        _s();\n        const [ref, isVisible] = useScrollAnimation(0.1);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `timeline-item ${isVisible ? 'animate' : ''}`,\n          ref: ref,\n          onClick: () => openModal(job),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"timeline-dot\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"timeline-date\",\n            children: job.period\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"timeline-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: job.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: job.company\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: job.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"timeline-more\",\n              children: [\"\\u041D\\u0430\\u0436\\u043C\\u0438\\u0442\\u0435 \\u0434\\u043B\\u044F \\u043F\\u043E\\u0434\\u0440\\u043E\\u0431\\u043D\\u043E\\u0439 \\u0438\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u0438\", /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-arrow-right\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 15\n          }, this)]\n        }, job.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this);\n      }, \"9bzfpXYnG30yGj0ARWuBbJCUP+Y=\", false, function () {\n        return [useScrollAnimation];\n      })), \"9bzfpXYnG30yGj0ARWuBbJCUP+Y=\", false, function () {\n        return [useScrollAnimation];\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isModalOpen,\n      onClose: closeModal,\n      title: selectedJob ? `${selectedJob.title} в ${selectedJob.company}` : '',\n      content: modalContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 5\n  }, this);\n};\n_s2(Experience, \"URWU8bnNgup4Pcbmih1CEb01+dM=\");\n_c = Experience;\nexport default Experience;\nvar _c;\n$RefreshReg$(_c, \"Experience\");","map":{"version":3,"names":["React","useState","Modal","useScrollAnimation","jsxDEV","_jsxDEV","Experience","_s2","_s","$RefreshSig$","isModalOpen","setIsModalOpen","selectedJob","setSelectedJob","jobData","id","period","title","company","description","responsibilities","projects","name","technologies","openModal","job","closeModal","modalContent","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","resp","index","project","tech","techIndex","ref","isVisible","onClick","isOpen","onClose","content","_c","$RefreshReg$"],"sources":["/Users/daniil/Documents/Projects/WEBusinessCard's/QA/src/pages/Experience/Experience.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Modal from '../../components/Modal/Modal';\nimport useScrollAnimation from '../../hooks/useScrollAnimation';\nimport './Experience.css';\n\nconst Experience = () => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [selectedJob, setSelectedJob] = useState(null);\n\n  // Данные о местах работы с проектами\n  const jobData = [\n    {\n      id: 1,\n      period: \"2021 - Настоящее время\",\n      title: \"Старший QA инженер\",\n      company: \"Company XYZ\",\n      description: \"Занимаюсь тестированием и автоматизацией проверок для нескольких проектов компании. Разрабатываю тестовые сценарии, проектирую и поддерживаю фреймворк автоматизации на Python.\",\n      responsibilities: [\n        \"Автоматизация тестирования на Python с использованием Pytest, Selenium\",\n        \"Разработка и поддержка CI/CD пайплайнов\",\n        \"Обеспечение качества продукта на всех этапах разработки\",\n        \"Наставничество и обучение младших QA инженеров\"\n      ],\n      projects: [\n        {\n          name: \"Корпоративная платформа управления данными\",\n          description: \"Разработка фреймворка автоматизации для тестирования web-интерфейса и REST API. Внедрение непрерывной интеграции с Jenkins для автоматического запуска тестов при каждом коммите.\",\n          technologies: [\"Python\", \"Pytest\", \"Selenium\", \"Jenkins\", \"Docker\", \"Allure\"]\n        },\n        {\n          name: \"Мобильное приложение для финансового сектора\",\n          description: \"Создание стратегии тестирования и автоматизация проверок для iOS и Android приложений. Внедрение BDD-подхода с использованием Cucumber и Appium.\",\n          technologies: [\"Appium\", \"Java\", \"Cucumber\", \"TestNG\", \"BDD\"]\n        },\n        {\n          name: \"Интеграция платежных систем\",\n          description: \"Разработка и автоматизация тестовых сценариев для проверки интеграции с различными платежными системами. Тестирование безопасности и производительности API.\",\n          technologies: [\"Postman\", \"JMeter\", \"Python\", \"Security Testing\"]\n        }\n      ]\n    },\n    {\n      id: 2,\n      period: \"2019 - 2021\",\n      title: \"QA инженер\",\n      company: \"Tech Solutions Inc.\",\n      description: \"Участвовал в разработке и тестировании веб-приложений и мобильных приложений. Проводил ручное и автоматизированное тестирование, работал с баг-трекерами.\",\n      responsibilities: [\n        \"Функциональное, регрессионное и UI тестирование\",\n        \"Разработка тестовых сценариев и тест-кейсов\",\n        \"Базовая автоматизация с использованием Python и Selenium\",\n        \"Работа с REST API и Postman\"\n      ],\n      projects: [\n        {\n          name: \"CRM система для компаний малого бизнеса\",\n          description: \"Тестирование веб-интерфейса CRM системы, включая функциональные, интеграционные и регрессионные тесты. Автоматизация критических пользовательских сценариев.\",\n          technologies: [\"Selenium\", \"JavaScript\", \"TestRail\", \"JIRA\"]\n        },\n        {\n          name: \"Веб-портал для образовательной платформы\",\n          description: \"Проверка соответствия требованиям и совместимости с различными браузерами. Создание автоматизированных тестов для проверки процесса регистрации и авторизации.\",\n          technologies: [\"Selenium WebDriver\", \"Python\", \"Cross-browser Testing\"]\n        }\n      ]\n    },\n    {\n      id: 3,\n      period: \"2018 - 2019\",\n      title: \"Стажер-тестировщик\",\n      company: \"Digital Start\",\n      description: \"Начал свою карьеру в IT с позиции стажера-тестировщика. Изучал основы тестирования ПО, проводил базовые проверки и писал тестовую документацию.\",\n      responsibilities: [\n        \"Ручное тестирование веб-приложений\",\n        \"Работа с тестовой документацией\",\n        \"Изучение основных принципов QA\",\n        \"Участие в командных обсуждениях и ретроспективах\"\n      ],\n      projects: [\n        {\n          name: \"Интернет-магазин электроники\",\n          description: \"Ручное тестирование функциональности и пользовательского интерфейса. Подготовка тестовой документации и отчетов о дефектах.\",\n          technologies: [\"Manual Testing\", \"Test Case Design\", \"Bug Tracking\"]\n        }\n      ]\n    }\n  ];\n\n  const openModal = (job) => {\n    setSelectedJob(job);\n    setIsModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n\n  // Создание содержимого модального окна для выбранной работы\n  const modalContent = selectedJob ? (\n    <div className=\"modal-job-content\">\n      <div className=\"modal-job-overview\">\n        <p className=\"modal-job-description\">{selectedJob.description}</p>\n\n        <div className=\"modal-responsibilities\">\n          <h4>Основные обязанности:</h4>\n          <ul>\n            {selectedJob.responsibilities.map((resp, index) => (\n              <li key={index}>{resp}</li>\n            ))}\n          </ul>\n        </div>\n      </div>\n\n      <h3 className=\"modal-projects-title\">Ключевые проекты:</h3>\n\n      {selectedJob.projects.map((project, index) => (\n        <div className=\"modal-project\" key={index}>\n          <h3>{project.name}</h3>\n          <p className=\"modal-project-description\">{project.description}</p>\n\n          <div className=\"modal-project-tech\">\n            <div className=\"modal-tech-title\">Технологии:</div>\n            <div className=\"modal-tech-tags\">\n              {project.technologies.map((tech, techIndex) => (\n                <span className=\"modal-tech-tag\" key={techIndex}>{tech}</span>\n              ))}\n            </div>\n          </div>\n        </div>\n      ))}\n    </div>\n  ) : null;\n\n  return (\n    <div className=\"experience-container\">\n      <h1 className=\"section-title\">Опыт работы</h1>\n      <p className=\"section-subtitle\">Мой профессиональный путь</p>\n\n      <div className=\"timeline\">\n        {jobData.map((job) => {\n          const [ref, isVisible] = useScrollAnimation(0.1);\n          return (\n            <div\n              className={`timeline-item ${isVisible ? 'animate' : ''}`}\n              key={job.id}\n              ref={ref}\n              onClick={() => openModal(job)}\n            >\n              <div className=\"timeline-dot\"></div>\n              <div className=\"timeline-date\">{job.period}</div>\n              <div className=\"timeline-content\">\n                <h3>{job.title}</h3>\n                <h4>{job.company}</h4>\n                <p>{job.description}</p>\n                <div className=\"timeline-more\">\n                  Нажмите для подробной информации\n                  <i className=\"fas fa-arrow-right\"></i>\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n\n      {/* Модальное окно */}\n      <Modal\n        isOpen={isModalOpen}\n        onClose={closeModal}\n        title={selectedJob ? `${selectedJob.title} в ${selectedJob.company}` : ''}\n        content={modalContent}\n      />\n    </div>\n  );\n};\n\nexport default Experience;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}