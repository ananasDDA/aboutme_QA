{"ast":null,"code":"var _jsxFileName = \"/Users/daniil/Documents/Projects/WEBusinessCard's/QA/src/pages/Experience/Experience.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Experience.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Experience = () => {\n  _s();\n  const [selectedJob, setSelectedJob] = useState(null);\n\n  // Информация о работе\n  const jobs = [{\n    id: 1,\n    period: '2021 - Настоящее время',\n    position: 'Старший QA инженер',\n    company: 'Company XYZ',\n    shortDescription: 'Тестирование и автоматизация проверок для нескольких проектов компании.',\n    responsibilities: ['Автоматизация тестирования на Python с использованием Pytest, Selenium', 'Разработка и поддержка CI/CD пайплайнов', 'Обеспечение качества продукта на всех этапах разработки', 'Наставничество и обучение младших QA инженеров'],\n    projects: [{\n      name: 'Проект \"Альфа\"',\n      description: 'Разработка фреймворка автоматизации для тестирования веб-приложения',\n      tasks: ['Разработка архитектуры фреймворка автоматизации', 'Интеграция с CI/CD системой (Jenkins)', 'Написание автотестов для критических бизнес-сценариев', 'Настройка генерации отчетов с Allure']\n    }, {\n      name: 'Проект \"Бета\"',\n      description: 'Тестирование REST API для системы управления клиентами',\n      tasks: ['Разработка тестовой стратегии для API', 'Создание коллекций в Postman', 'Автоматизация API-тестов с использованием Python и Requests', 'Нагрузочное тестирование API с JMeter']\n    }],\n    technologies: ['Python', 'Selenium', 'Pytest', 'REST API', 'Postman', 'Jenkins', 'Docker', 'Git', 'Jira']\n  }, {\n    id: 2,\n    period: '2019 - 2021',\n    position: 'QA инженер',\n    company: 'Tech Solutions Inc.',\n    shortDescription: 'Ручное и автоматизированное тестирование веб и мобильных приложений.',\n    responsibilities: ['Функциональное, регрессионное и UI тестирование', 'Разработка тестовых сценариев и тест-кейсов', 'Базовая автоматизация с использованием Python и Selenium', 'Работа с REST API и Postman'],\n    projects: [{\n      name: 'Мобильное приложение \"MobileTracker\"',\n      description: 'Тестирование мобильного приложения для отслеживания тренировок',\n      tasks: ['Ручное тестирование на iOS и Android платформах', 'Разработка тест-кейсов и чек-листов', 'Тестирование совместимости с различными устройствами', 'Отчеты о багах и отслеживание исправлений']\n    }, {\n      name: 'Веб-портал для клиентов',\n      description: 'Тестирование клиентского портала с личным кабинетом',\n      tasks: ['Функциональное и регрессионное тестирование', 'Оптимизация тестовых наборов', 'Разработка базовых автоматизированных тестов', 'Тестирование безопасности и доступности']\n    }],\n    technologies: ['Python', 'Selenium', 'Manual Testing', 'Mobile Testing', 'TestRail', 'Jira', 'Confluence']\n  }, {\n    id: 3,\n    period: '2018 - 2019',\n    position: 'Стажер-тестировщик',\n    company: 'Digital Start',\n    shortDescription: 'Начало карьеры в IT с позиции стажера-тестировщика.',\n    responsibilities: ['Ручное тестирование веб-приложений', 'Работа с тестовой документацией', 'Изучение основных принципов QA', 'Участие в командных обсуждениях и ретроспективах'],\n    projects: [{\n      name: 'Онлайн магазин \"DigitalMarket\"',\n      description: 'Тестирование пользовательского интерфейса и функциональности онлайн-магазина',\n      tasks: ['Тестирование пользовательских сценариев', 'Проверка корзины и процесса оформления заказа', 'Тестирование поиска и фильтрации товаров', 'Составление отчетов о найденных ошибках']\n    }],\n    technologies: ['Manual Testing', 'HTML/CSS основы', 'TestRail', 'Jira']\n  }];\n\n  // Открыть модальное окно\n  const openModal = job => {\n    setSelectedJob(job);\n    document.body.style.overflow = 'hidden'; // Предотвращаем прокрутку страницы\n  };\n\n  // Закрыть модальное окно\n  const closeModal = () => {\n    setSelectedJob(null);\n    document.body.style.overflow = 'auto'; // Восстанавливаем прокрутку\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"experience-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"section-title\",\n      children: \"\\u041E\\u043F\\u044B\\u0442 \\u0440\\u0430\\u0431\\u043E\\u0442\\u044B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"section-subtitle\",\n      children: \"\\u041C\\u043E\\u0439 \\u043F\\u0440\\u043E\\u0444\\u0435\\u0441\\u0441\\u0438\\u043E\\u043D\\u0430\\u043B\\u044C\\u043D\\u044B\\u0439 \\u043F\\u0443\\u0442\\u044C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timeline\",\n      children: jobs.map(job => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timeline-item\",\n        onClick: () => openModal(job),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"timeline-dot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"timeline-date\",\n          children: job.period\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"timeline-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: job.position\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: job.company\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: job.shortDescription\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"job-responsibilities\",\n            children: [job.responsibilities.slice(0, 2).map((resp, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: resp\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 19\n            }, this)), job.responsibilities.length > 2 && /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"more-info\",\n              children: \"...\\u0438 \\u0434\\u0440\\u0443\\u0433\\u0438\\u0435 \\u0437\\u0430\\u0434\\u0430\\u0447\\u0438\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"view-details\",\n            children: [\"\\u041D\\u0430\\u0436\\u043C\\u0438\\u0442\\u0435 \\u0434\\u043B\\u044F \\u043F\\u043E\\u0434\\u0440\\u043E\\u0431\\u043D\\u043E\\u0441\\u0442\\u0435\\u0439\", /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-arrow-right\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this)]\n      }, job.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), selectedJob && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"job-modal-overlay\",\n      onClick: closeModal,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"job-modal-content\",\n        onClick: e => e.stopPropagation(),\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-modal\",\n          onClick: closeModal,\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-times\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: selectedJob.position\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: selectedJob.company\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"modal-period\",\n            children: selectedJob.period\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"\\u041E\\u0431\\u044F\\u0437\\u0430\\u043D\\u043D\\u043E\\u0441\\u0442\\u0438\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: selectedJob.responsibilities.map((resp, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: resp\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"\\u041F\\u0440\\u043E\\u0435\\u043A\\u0442\\u044B\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 15\n          }, this), selectedJob.projects.map((project, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"project-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              children: project.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: project.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"project-tasks\",\n              children: project.tasks.map((task, taskIdx) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: task\n              }, taskIdx, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 19\n            }, this)]\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"\\u0422\\u0435\\u0445\\u043D\\u043E\\u043B\\u043E\\u0433\\u0438\\u0438\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tech-tags\",\n            children: selectedJob.technologies.map((tech, idx) => /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"tech-tag\",\n              children: tech\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n};\n_s(Experience, \"D8oXRIhUPPVPENizF1EZCaEerKE=\");\n_c = Experience;\nexport default Experience;\nvar _c;\n$RefreshReg$(_c, \"Experience\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Experience","_s","selectedJob","setSelectedJob","jobs","id","period","position","company","shortDescription","responsibilities","projects","name","description","tasks","technologies","openModal","job","document","body","style","overflow","closeModal","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","slice","resp","idx","length","e","stopPropagation","project","task","taskIdx","tech","_c","$RefreshReg$"],"sources":["/Users/daniil/Documents/Projects/WEBusinessCard's/QA/src/pages/Experience/Experience.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './Experience.css';\n\nconst Experience = () => {\n  const [selectedJob, setSelectedJob] = useState(null);\n\n  // Информация о работе\n  const jobs = [\n    {\n      id: 1,\n      period: '2021 - Настоящее время',\n      position: 'Старший QA инженер',\n      company: 'Company XYZ',\n      shortDescription: 'Тестирование и автоматизация проверок для нескольких проектов компании.',\n      responsibilities: [\n        'Автоматизация тестирования на Python с использованием Pytest, Selenium',\n        'Разработка и поддержка CI/CD пайплайнов',\n        'Обеспечение качества продукта на всех этапах разработки',\n        'Наставничество и обучение младших QA инженеров'\n      ],\n      projects: [\n        {\n          name: 'Проект \"Альфа\"',\n          description: 'Разработка фреймворка автоматизации для тестирования веб-приложения',\n          tasks: [\n            'Разработка архитектуры фреймворка автоматизации',\n            'Интеграция с CI/CD системой (Jenkins)',\n            'Написание автотестов для критических бизнес-сценариев',\n            'Настройка генерации отчетов с Allure'\n          ]\n        },\n        {\n          name: 'Проект \"Бета\"',\n          description: 'Тестирование REST API для системы управления клиентами',\n          tasks: [\n            'Разработка тестовой стратегии для API',\n            'Создание коллекций в Postman',\n            'Автоматизация API-тестов с использованием Python и Requests',\n            'Нагрузочное тестирование API с JMeter'\n          ]\n        }\n      ],\n      technologies: ['Python', 'Selenium', 'Pytest', 'REST API', 'Postman', 'Jenkins', 'Docker', 'Git', 'Jira']\n    },\n    {\n      id: 2,\n      period: '2019 - 2021',\n      position: 'QA инженер',\n      company: 'Tech Solutions Inc.',\n      shortDescription: 'Ручное и автоматизированное тестирование веб и мобильных приложений.',\n      responsibilities: [\n        'Функциональное, регрессионное и UI тестирование',\n        'Разработка тестовых сценариев и тест-кейсов',\n        'Базовая автоматизация с использованием Python и Selenium',\n        'Работа с REST API и Postman'\n      ],\n      projects: [\n        {\n          name: 'Мобильное приложение \"MobileTracker\"',\n          description: 'Тестирование мобильного приложения для отслеживания тренировок',\n          tasks: [\n            'Ручное тестирование на iOS и Android платформах',\n            'Разработка тест-кейсов и чек-листов',\n            'Тестирование совместимости с различными устройствами',\n            'Отчеты о багах и отслеживание исправлений'\n          ]\n        },\n        {\n          name: 'Веб-портал для клиентов',\n          description: 'Тестирование клиентского портала с личным кабинетом',\n          tasks: [\n            'Функциональное и регрессионное тестирование',\n            'Оптимизация тестовых наборов',\n            'Разработка базовых автоматизированных тестов',\n            'Тестирование безопасности и доступности'\n          ]\n        }\n      ],\n      technologies: ['Python', 'Selenium', 'Manual Testing', 'Mobile Testing', 'TestRail', 'Jira', 'Confluence']\n    },\n    {\n      id: 3,\n      period: '2018 - 2019',\n      position: 'Стажер-тестировщик',\n      company: 'Digital Start',\n      shortDescription: 'Начало карьеры в IT с позиции стажера-тестировщика.',\n      responsibilities: [\n        'Ручное тестирование веб-приложений',\n        'Работа с тестовой документацией',\n        'Изучение основных принципов QA',\n        'Участие в командных обсуждениях и ретроспективах'\n      ],\n      projects: [\n        {\n          name: 'Онлайн магазин \"DigitalMarket\"',\n          description: 'Тестирование пользовательского интерфейса и функциональности онлайн-магазина',\n          tasks: [\n            'Тестирование пользовательских сценариев',\n            'Проверка корзины и процесса оформления заказа',\n            'Тестирование поиска и фильтрации товаров',\n            'Составление отчетов о найденных ошибках'\n          ]\n        }\n      ],\n      technologies: ['Manual Testing', 'HTML/CSS основы', 'TestRail', 'Jira']\n    }\n  ];\n\n  // Открыть модальное окно\n  const openModal = (job) => {\n    setSelectedJob(job);\n    document.body.style.overflow = 'hidden'; // Предотвращаем прокрутку страницы\n  };\n\n  // Закрыть модальное окно\n  const closeModal = () => {\n    setSelectedJob(null);\n    document.body.style.overflow = 'auto'; // Восстанавливаем прокрутку\n  };\n\n  return (\n    <div className=\"experience-container\">\n      <h1 className=\"section-title\">Опыт работы</h1>\n      <p className=\"section-subtitle\">Мой профессиональный путь</p>\n\n      <div className=\"timeline\">\n        {jobs.map((job) => (\n          <div\n            className=\"timeline-item\"\n            key={job.id}\n            onClick={() => openModal(job)}\n          >\n            <div className=\"timeline-dot\"></div>\n            <div className=\"timeline-date\">{job.period}</div>\n            <div className=\"timeline-content\">\n              <h3>{job.position}</h3>\n              <h4>{job.company}</h4>\n              <p>{job.shortDescription}</p>\n              <ul className=\"job-responsibilities\">\n                {job.responsibilities.slice(0, 2).map((resp, idx) => (\n                  <li key={idx}>{resp}</li>\n                ))}\n                {job.responsibilities.length > 2 && (\n                  <li className=\"more-info\">...и другие задачи</li>\n                )}\n              </ul>\n              <div className=\"view-details\">\n                Нажмите для подробностей\n                <i className=\"fas fa-arrow-right\"></i>\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n\n      {/* Модальное окно */}\n      {selectedJob && (\n        <div className=\"job-modal-overlay\" onClick={closeModal}>\n          <div className=\"job-modal-content\" onClick={(e) => e.stopPropagation()}>\n            <button className=\"close-modal\" onClick={closeModal}>\n              <i className=\"fas fa-times\"></i>\n            </button>\n\n            <div className=\"modal-header\">\n              <h2>{selectedJob.position}</h2>\n              <h3>{selectedJob.company}</h3>\n              <p className=\"modal-period\">{selectedJob.period}</p>\n            </div>\n\n            <div className=\"modal-section\">\n              <h4>Обязанности</h4>\n              <ul>\n                {selectedJob.responsibilities.map((resp, idx) => (\n                  <li key={idx}>{resp}</li>\n                ))}\n              </ul>\n            </div>\n\n            <div className=\"modal-section\">\n              <h4>Проекты</h4>\n              {selectedJob.projects.map((project, idx) => (\n                <div className=\"project-card\" key={idx}>\n                  <h5>{project.name}</h5>\n                  <p>{project.description}</p>\n                  <ul className=\"project-tasks\">\n                    {project.tasks.map((task, taskIdx) => (\n                      <li key={taskIdx}>{task}</li>\n                    ))}\n                  </ul>\n                </div>\n              ))}\n            </div>\n\n            <div className=\"modal-section\">\n              <h4>Технологии</h4>\n              <div className=\"tech-tags\">\n                {selectedJob.technologies.map((tech, idx) => (\n                  <span className=\"tech-tag\" key={idx}>{tech}</span>\n                ))}\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Experience;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}