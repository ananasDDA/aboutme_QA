{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState, useRef } from 'react';\nconst useScrollAnimation = (threshold = 0.1) => {\n  _s();\n  const [isVisible, setIsVisible] = useState(false);\n  const ref = useRef(null);\n  useEffect(() => {\n    const observer = new IntersectionObserver(([entry]) => {\n      // Если элемент виден более чем на пороговое значение, переключаем флаг\n      if (entry.isIntersecting) {\n        setIsVisible(true);\n        // Отключаем observer после первого срабатывания\n        observer.unobserve(entry.target);\n      }\n    }, {\n      threshold\n    });\n    const currentRef = ref.current;\n    if (currentRef) {\n      observer.observe(currentRef);\n    }\n    return () => {\n      if (currentRef) {\n        observer.unobserve(currentRef);\n      }\n    };\n  }, [threshold]);\n  return [ref, isVisible];\n};\n_s(useScrollAnimation, \"7N8EcRPlcY6o9kzg5IgMZgWhyLI=\");\nexport default useScrollAnimation;","map":{"version":3,"names":["useEffect","useState","useRef","useScrollAnimation","threshold","_s","isVisible","setIsVisible","ref","observer","IntersectionObserver","entry","isIntersecting","unobserve","target","currentRef","current","observe"],"sources":["/Users/daniil/Documents/Projects/WEBusinessCard's/QA/src/hooks/useScrollAnimation.js"],"sourcesContent":["import { useEffect, useState, useRef } from 'react';\n\nconst useScrollAnimation = (threshold = 0.1) => {\n  const [isVisible, setIsVisible] = useState(false);\n  const ref = useRef(null);\n\n  useEffect(() => {\n    const observer = new IntersectionObserver(\n      ([entry]) => {\n        // Если элемент виден более чем на пороговое значение, переключаем флаг\n        if (entry.isIntersecting) {\n          setIsVisible(true);\n          // Отключаем observer после первого срабатывания\n          observer.unobserve(entry.target);\n        }\n      },\n      {\n        threshold,\n      }\n    );\n\n    const currentRef = ref.current;\n    if (currentRef) {\n      observer.observe(currentRef);\n    }\n\n    return () => {\n      if (currentRef) {\n        observer.unobserve(currentRef);\n      }\n    };\n  }, [threshold]);\n\n  return [ref, isVisible];\n};\n\nexport default useScrollAnimation;"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAEnD,MAAMC,kBAAkB,GAAGA,CAACC,SAAS,GAAG,GAAG,KAAK;EAAAC,EAAA;EAC9C,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAMO,GAAG,GAAGN,MAAM,CAAC,IAAI,CAAC;EAExBF,SAAS,CAAC,MAAM;IACd,MAAMS,QAAQ,GAAG,IAAIC,oBAAoB,CACvC,CAAC,CAACC,KAAK,CAAC,KAAK;MACX;MACA,IAAIA,KAAK,CAACC,cAAc,EAAE;QACxBL,YAAY,CAAC,IAAI,CAAC;QAClB;QACAE,QAAQ,CAACI,SAAS,CAACF,KAAK,CAACG,MAAM,CAAC;MAClC;IACF,CAAC,EACD;MACEV;IACF,CACF,CAAC;IAED,MAAMW,UAAU,GAAGP,GAAG,CAACQ,OAAO;IAC9B,IAAID,UAAU,EAAE;MACdN,QAAQ,CAACQ,OAAO,CAACF,UAAU,CAAC;IAC9B;IAEA,OAAO,MAAM;MACX,IAAIA,UAAU,EAAE;QACdN,QAAQ,CAACI,SAAS,CAACE,UAAU,CAAC;MAChC;IACF,CAAC;EACH,CAAC,EAAE,CAACX,SAAS,CAAC,CAAC;EAEf,OAAO,CAACI,GAAG,EAAEF,SAAS,CAAC;AACzB,CAAC;AAACD,EAAA,CAhCIF,kBAAkB;AAkCxB,eAAeA,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}